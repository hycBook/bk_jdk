# This is a basic workflow to help you get started with Actions

name: book python github

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build_env_hyc"
  build_env_hyc:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # install nodejs env
      - name: install nodejs
        uses: actions/setup-node@v1
        with: 
          node-version: '12.16.1'
      
      # configue gitbook
      - name: configue gitbook
        run: |
          echo 开始拉取nodejs插件
          git clone https://github.com/narutohyc/node_modules_mathjax.git
          cp -r ./node_modules_mathjax/node_modules .
          npm install -g gitbook-cli
          gitbook install
          # npm install -g gitbook-summary

      - name: export pdf ebook
        run: |
          # 安装calibre，生成电子书
          echo 安装calibre...
          npm install svgexport -g
          sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin
          sudo ln -s /usr/bin/nodejs /usr/bin/node
          echo 安装calibre完成
          mkdir -p /usr/share/fonts/truetype
          cp -r ./node_modules_mathjax/fonts/* /usr/share/fonts/truetype

      # generate _book folder
      - name: generate_book_folder
        run: |
          gitbook build
          echo 开始生成epub电子书...
          gitbook epub ./ bk_jdk.epub
          echo 生成epub电子书完成
          mkdir _ebook
          cp bk_jdk.epub _ebook/
          echo pdf电子书复制完成
          cp ./node_modules_mathjax/py_scripts/gen_sup_idx.py .
          pip install BeautifulSoup4
          pip install lxml
          python -u gen_sup_idx.py
          echo 生成辅助索引完成
          rm -rf _book/docs/*
          rm -rf _book/chapters/*.md
          rm -rf _book/*.pdf
          echo 删除多余格式文件完成
          cp ./node_modules_mathjax/styles/style.css _book/gitbook/style.css
          echo style.css文件替换完成

      - name: Deploy #步骤4：把编译好的静态目录上传到gh-pages分支上
        uses: JamesIves/github-pages-deploy-action@3.1.5 #这里调用第三方依赖，用于上传代码到指定分支上
        with:
          ACCESS_TOKEN: ${{ secrets.TOKEN }}
          BRANCH: gh-pages #github pages 默认的分支
          FOLDER: _book #上传文件的目录，我这个目录在根目录下，如果是子目录可以这么写  docs/.vuepress/dist

      - name: Create GitHub release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.TOKEN }}
          automatic_release_tag: 'ebook_jdk'
          title: ${{ env.ReleaseVersion }}
          prerelease: false
          files: |
            _ebook/*

      # Runs a single command using the runners shell
      - name: print_infos
        run: echo build sucessful!
  
